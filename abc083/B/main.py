#!/usr/bin/env python3
import sys


def solve(N: int, A: int, B: int):
    total = 0
    for i in range(1, N + 1):
        keta4, mod = divmod(i, 10000)
        keta3, mod = divmod(mod, 1000)
        keta2, mod = divmod(mod, 100)
        keta1, mod = divmod(mod, 10)
        ketasum = keta4 + keta3 + keta2 + keta1 + mod
        if ketasum >= A and ketasum <= B:
            total = total + i
    return total


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    print(solve(N, A, B))

if __name__ == '__main__':
    main()
